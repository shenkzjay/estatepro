generator client {
  provider = "prisma-client-js"
  previewFeatures = ["strictUndefinedChecks"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                   String           @id @default(auto()) @map("_id") @db.ObjectId
  name                 String?
  email                String           @unique
  password             String?
  image                String?
  role                 Role?            @default(RESIDENT)
  residentData         Resident?        @relation("UserToResident")
  staffData            Staff?           @relation("UserToStaff")
  createdBy            User?            @relation("CreatedBy", fields: [createdById], references: [id], onDelete: NoAction, onUpdate: NoAction)
  createdById          String?          @db.ObjectId
  createdUsers         User[]           @relation("CreatedBy")
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
}

model Resident {
  id            String           @id @default(auto()) @map("_id") @db.ObjectId
  housenumber   String?
  streetaddress String?
  housetype     String?
  moveindata    DateTime?
  phonenumber   String?
  user          User            @relation("UserToResident", fields:[userId], references: [id], onDelete: Cascade)
  userId        String          @unique @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}


model Staff {
    id            String           @id @default(auto()) @map("_id") @db.ObjectId
    user          User             @relation("UserToStaff",fields: [userId], references: [id], onDelete: Cascade)
    userId    String   @unique @db.ObjectId
    position      String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt


}



enum Role {
  SUPERADMIN
  ADMIN
  RESIDENT
  STAFF
}
